#!/usr/bin/env bash

set -euo pipefail

os_name="$(uname -s)"
echo "Setting up $os_name..."

if [ "$os_name" = "Darwin" ]; then
    echo 'Installing XCode...'
    if [ ! "$(xcode-select --version)" = "" ]; then
        printf '\x1b[0;32mXCode is already installed.\x1b[0m\n'
    else
        if xcode-select --install; then
            printf '\x1b[0;32mInstalled XCode.\x1b[0m\n'
        else
            printf '\x1b[0;31mFailed to install XCode. Exiting.\x1b[0m\n' && exit 1
        fi
    fi

    if [ ! -d /opt/homebrew/ ]; then
        echo 'Installing Homebrew...'
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
    echo 'Homebrew found. Installing packages...'
    brew bundle install --file "$HOME"/.dotfiles/rcignore/Brewfile

    echo 'Symlinking dotfiles...'
    RCRC="$HOME"/.dotfiles/rcrc rcup -t mac

    echo 'Copying Karabiner config...'
    cp ~/.dotfiles/karabiner.json ~/.config/karabiner/karabiner.json
    echo 'Copied Karabiner config. Restart Karabiner now.'

    echo 'Disabling "smart" quotes...'
    defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

    echo 'Setting up Firefox styling...'
    chromedir=$(ls -d "$HOME"/Library/Application\ Support/Firefox/Profiles/*default-release)/chrome
    mkdir -p "$chromedir"
    if [ ! -f "$chromedir/userChrome.css" ]; then
        ln -s "$HOME"/.dotfiles/userChrome.css "$chromedir"/userChrome.css
        printf '\x1b[0;32mFirefox styling applied.\x1b[0m\n'
    else
        printf '\x1b[0;33mFirefox styling already exists.\x1b[0m\n'
    fi

    set_up_languages
elif [ "$os_name" = "Linux" ]; then
    printf '\x1b[0;31mUpdate the install script for Linux!\x1b[0m\n'
    # TODO: install software
    # RCRC="$HOME"/.dotfiles/rcrc rcup -t linux
    # TODO: settings
    # TODO: Firefox styling
    # TODO: shared setup
else
    printf '\x1b[0;31mNo installation set up for %s yet\x1b[0m\n' "$os_name"
fi

printf '\x1b[0;32mSetup complete!\x1b[0m\n'

set_up_languages () {
    npm i -g npm
    npm i -g @elm-tooling/elm-language-server elm-format elm-live elm-review elm-test

    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
}

